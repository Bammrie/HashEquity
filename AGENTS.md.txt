# AGENTS.md

## Project: HashEquity.com
A Web3 game and token ecosystem powered by the HASH token on the Polygon (MATIC) network.

---

## üöÄ Overview

**HashEquity** is a real-time, interactive Web3 game where users earn HASH tokens by destroying objects on screen. The game rewards players with *Unminted HASH*, which can be minted daily or traded for lower returns. The site includes a dynamic token economy, NFT reward system, a smart contract-driven admin vault (HashVault), and live global stats for transparency and competition.

---

## üéÆ Core Game Loop

- Players connect their Web3 wallets to log in.
- Game shows **10 active clickable objects** at all times.
- Clicking an object:
  - Removes it
  - Rewards Unminted HASH (based on the object's type)
  - Spawns a new object
- Some objects may trigger:
  - Mini-games (slot machine, plinko, etc.)
  - Random bonuses or penalties
- Object logic is modular and expandable.

---

## ü™ô Tokenomics: HASH

- **Token Chain**: Polygon (MATIC)
- **Ticker**: HASH
- **Circulating Supply at Launch**: 0
- **Minting Authority**: One admin address (HashVault)
- **Transaction Fees**: None on internal balances, gas fees apply on withdrawals

### HASH Balance Types

| Balance Type     | Description                                         |
|------------------|-----------------------------------------------------|
| `Unminted HASH`  | Earned by gameplay. Can be minted daily or traded. |
| `HASH`           | Actual on-chain token. Withdrawable.                |

### Minting Rules

- Every day at **00:00 UTC**, a backend service:
  - Sums all users' `Unminted HASH`
  - Mints that total supply to the **HashVault address**
  - Distributes 80% to users‚Äô `HASH` balances
  - Sends 20% to the HashVault's balance as a tax
  - Resets all users' `Unminted HASH` to 0

### Trade Feature

- Users can trade their `Unminted HASH` for 50% of its value in `HASH`
- Tokens come from the HashVault's `HASH` balance
- Traded Unminted HASH gets added to the Vault's unminted balance

---

## üîê Admin Access

Admin access is granted via wallet address verification:

```ts
const ADMIN_WALLETS = [
  "0xCd0Bc675455ee5Fa8739F5c377fe4Ec1437Bc618", // Add more as needed
];
